# Byte-compiled / optimized / DLL files
*/__pycache__/*
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore entire .idea/ directory.
.idea/

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Windows
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# Linux
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# Project-specific ignores
# ======================

# Log files and exports
*.log
exports/
reports/
output/
logs/

# Configuration files with sensitive data
config/local.yaml
config/production.yaml
.env.local
.env.production

# Temporary analysis files
temp/
tmp/
*.tmp

# Large log files (keep samples)
*.log.gz
access.log.*
error.log.*
!sample_access.log

# Database files
*.db
*.sqlite
*.sqlite3

# Cache data directory
logcli/data/
!logcli/data/.gitkeep

# Backup files
*.bak
*.backup
*.old

# Performance profiling files
*.prof
*.profile

# Memory dumps
*.dump
core.*

# IDE and editor files
*.swp
*.swo
*~
.project
.pydevproject

# OS generated files
.DS_Store?
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Documentation builds
docs/build/
docs/dist/

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Local development overrides
local_settings.py
settings_local.py

# SSL certificates and keys
*.pem
*.key
*.crt
*.cert

# Archive files
*.tar.gz
*.zip
*.rar
*.7z

# Cache directories
.cache/
__pycache__/
.pytest_cache/

# Runtime files
*.pid
*.sock

# Local development databases
dev.db
test.db

# Generated charts and visualizations
charts/
*.png
*.jpg
*.svg
!docs/images/*.png
!docs/images/*.jpg
!docs/images/*.svg

# Temporary export files
export_*.csv
export_*.json
export_*.html

# User-specific configuration
user_config.yaml
.user_settings

# Performance test results
benchmark_results/
load_test_results/

# Security scan results
security_reports/
vulnerability_scans/

# Local nginx logs (keep samples)
/var/log/nginx/
!sample_logs/

# Virtual environment activation scripts
activate
activate.bat
activate.ps1

# Package lock files (uncomment if using specific package manager)
# Pipfile.lock
# poetry.lock
# package-lock.json
# yarn.lock

# Build artifacts
build/
dist/
*.egg-info/

# Local development scripts
dev_scripts/
local_*.py
test_*.py
!tests/test_*.py

# Temporary markdown files
*.md.tmp
*.md.bak

# Local Cursor/AI assistant files
.cursor/
!.cursor/rules/

logcli/__pycache__/
logcli/__pycache__/aggregators.cpython-313.pyc 
logcli/__pycache__/config.cpython-313.pyc
logcli/__pycache__/filters.cpython-313.pyc
logcli/__pycache__/main.cpython-313.pyc
logcli/__pycache__/parser.cpython-313.pyc
logcli/__pycache__/security.cpython-313.pyc
logcli/__pycache__/performance.cpython-313.pyc
logcli/__pycache__/bots.cpython-313.pyc
logcli/__pycache__/log_reader.cpython-313.pyc
logcli/__pycache__/export.cpython-313.pyc
